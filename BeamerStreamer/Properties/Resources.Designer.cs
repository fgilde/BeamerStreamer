//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BeamerStreamer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BeamerStreamer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete All Settings?.
        /// </summary>
        internal static string DeleteAllSettings {
            get {
                return ResourceManager.GetString("DeleteAllSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Current Settings &apos;{0}&apos;?.
        /// </summary>
        internal static string DeleteCurrentSettings {
            get {
                return ResourceManager.GetString("DeleteCurrentSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press H to show Help.
        /// </summary>
        internal static string HelpMessage {
            get {
                return ResourceManager.GetString("HelpMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No signal detected.
        /// </summary>
        internal static string NoSignalDetected {
            get {
                return ResourceManager.GetString("NoSignalDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opacity: {0}.
        /// </summary>
        internal static string OpacityLevel {
            get {
                return ResourceManager.GetString("OpacityLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preset &apos;{0}&apos; saved!.
        /// </summary>
        internal static string PresetSaved {
            get {
                return ResourceManager.GetString("PresetSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Press &quot;Escape&quot; to Exit Application
        ///- Press &quot;I&quot; to select Input
        ///- Press &quot;E&quot; to Setup Effects
        ///- Use Arrow Keys to Move TV rect
        ///- Press Space to toggle soundbar effect
        ///- Press &quot;X&quot; to toggle sound effects
        /// -Press &quot;S&quot; to Simulate Tv
        ///- Press &quot;C&quot; to change color of tv rect (Best is black)
        /// -Press &quot;O&quot; to change Overlay color
        /// -Press &quot;OemPlus (+ on NumPad)&quot; to increment Opacity
        /// -Press &quot;OemMinus (- on NumPad)&quot; to increment Opacity
        /// -Press  &quot;P&quot; to save current Settings as Preset
        /// -Press &quot;PageUp or PageD [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SimpleHelp {
            get {
                return ResourceManager.GetString("SimpleHelp", resourceCulture);
            }
        }
    }
}
